name: Deploy to Firebase

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write   # Required for OIDC
  contents: read    # Required to checkout code

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'salon-crm/package-lock.json'

    - name: Install dependencies
      working-directory: ./salon-crm
      run: npm ci

    - name: Build application
      working-directory: ./salon-crm
      run: npm run build

    - name: Run tests
      working-directory: ./salon-crm
      run: npm test -- --coverage --watchAll=false

    # Archive build artifacts for other jobs
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: salon-crm/build/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: salon-crm/build/

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.GCP_WIP }}
        service_account: firebase-deployer@${{ secrets.GCP_PROJECT }}.iam.gserviceaccount.com

    - name: Setup Firebase CLI
      run: |
        npm install -g firebase-tools
        firebase --version

    - name: Deploy to Firebase Hosting
      run: |
        firebase deploy --only hosting --project=${{ secrets.GCP_PROJECT }}
      env:
        FIREBASE_CLI_EXPERIMENTS: webframeworks

    - name: Deploy Functions (if any)
      run: |
        if [ -d "functions" ]; then
          firebase deploy --only functions --project=${{ secrets.GCP_PROJECT }}
        else
          echo "No functions directory found, skipping functions deployment"
        fi

    - name: Deploy Firestore Rules
      run: |
        firebase deploy --only firestore:rules --project=${{ secrets.GCP_PROJECT }}

    - name: Deployment Summary
      run: |
        echo "üéâ Deployment completed successfully!"
        echo "üåê Live URL: https://${{ secrets.GCP_PROJECT }}.web.app"
        echo "üîó Custom domain: https://nadia-beauty-salon.web.app (if configured)" 